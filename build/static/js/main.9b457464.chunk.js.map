{"version":3,"sources":["DataContext.js","Chart.js","Twitter.js","regions.js","App.js","serviceWorker.js","index.js"],"names":["DataContext","React","createContext","streamgraph","Highcharts","setOptions","lang","months","shortMonths","weekdays","resetZoom","withDataContext","Component","getNationalData","date","YYYYMMDD","moment","format","props","nationalData","find","item","total_vaccines","NaN","this","zones","data","dateRange","series","forEach","zone","dataZone","filter","code","value","startDate","endDate","push","name","label","map","Number","Date","totalVaccines","title","text","chart","type","width","height","chartHeight","zoomType","resetZoomButton","theme","style","color","yAxis","scale","visible","xAxis","plotOptions","marker","enabled","credits","legend","itemStyle","itemHoverStyle","tooltip","useHTML","formatter","footerStyle","html","x","toLocaleDateString","reduce","s","serie","point","points","index","y","setSeries","highcharts","options","setConfig","Consumer","context","href","className","viewBox","fill","d","App","state","getLocalData","isFetching","fetchError","divChart","createRef","setKeyValue","key","setState","setLocalData","localStorage","getItem","JSON","parse","e","console","warn","setItem","stringify","fetch","res","json","current","getBoundingClientRect","Promise","all","fetchRegionalData","fetchNationalData","Provider","Container","fluid","Row","Col","ref","Alert","variant","size","Twitter","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9b457464.chunk.js","sourcesContent":["import React from \"react\"\n\nconst DataContext = React.createContext()\n\nexport default DataContext\n\nexport const withDataContext = Component => props => (\n    <DataContext.Consumer>\n        { context => <Component { ...context }/> }\n    </DataContext.Consumer>\n)","/* eslint-disable no-unused-expressions */\nimport React from \"react\"\nimport Highcharts from 'highcharts'\nimport HighchartsReact from 'highcharts-react-official'\nimport streamgraph from 'highcharts/modules/streamgraph'\nimport { withDataContext } from \"./DataContext\"\nimport moment from \"moment\"\n\nstreamgraph(Highcharts)\n\nHighcharts.setOptions({\n    lang: {\n        months: [\n            'Janvier', 'Février', 'Mars', 'Avril',\n            'Mai', 'Juin', 'Juillet', 'Août',\n            'Septembre', 'Octobre', 'Novembre', 'Décembre'\n        ],\n        shortMonths : [\"Jan\", \"Fév\", \"Mar\", \"Avr\", \"Mai\", \"Juin\", \"Juil\", \"Août\", \"Sep\", \"Oct\", \"Nov\", \"Déc\"],\n        weekdays: [\n            'Dimanche', 'Lundi', 'Mardi', 'Mercredi',\n            'Jeudi', 'Vendredi', 'Samedi'\n        ],\n        resetZoom : \"Réinitialiser le zoom\"\n    }\n})\n\nexport default withDataContext(class Chart extends React.Component {\n\n    getNationalData = date => {\n        const YYYYMMDD = moment(date).format(\"YYYY-MM-DD\")\n\n        return this.props.nationalData.find(item => item.date === YYYYMMDD)?.total_vaccines || NaN\n    }\n\n    setSeries() {\n        const { zones, data, dateRange } = this.props\n\n        const series = []\n        \n        zones?.forEach(zone => {\n            const dataZone = data\n            .filter(item => item.code === zone?.value)\n            .filter(item => moment(item.date) >= dateRange?.startDate)\n            .filter(item => moment(item.date) <= dateRange?.endDate)\n            \n            series.push({\n                name :  zone?.label,\n                data : dataZone.map(item => [Number(new Date(item.date)), Number(item.totalVaccines)] )\n            })\n        })\n\n        return series\n    }\n\n    setConfig() {\n\n        const { getNationalData } = this\n\n        return {\n            title: { text: \"\" },\n            chart: {\n                type: \"streamgraph\",\n                width : null,\n                height : this.props.chartHeight,\n                zoomType : \"x\",\n                resetZoomButton : {\n                    theme : {\n                        style : { color : \"#ddd\" }\n                    }\n                }\n            },\n            yAxis: {\n                title: { text: \"Nombre de personnes vaccinées\" },\n                type: this.props.scale,\n                visible: false\n            },\n            xAxis: {\n                type: 'datetime'\n            },\n            plotOptions: {\n                series: {\n                    marker: {\n                        enabled: true\n                    }\n                }\n            },\n            credits: {\n                enabled: false\n            },\n            legend: {\n                itemStyle: {\n                    color: '#bbb'\n                },\n                itemHoverStyle:{\n                    color: '#fff'\n                }\n            },\n            tooltip : {\n                useHTML: true,\n                formatter: function() {\n                    const series = this.series.chart.series\n                    const footerStyle = \"padding-top:15px;color:white;font-size:16px\"\n\n                    let html = `<div style=\"color:white;text-align:center\">\n                        ${new Date(this.x).toLocaleDateString()}\n                    </div>\n                    <table>`\n\n                    html += series.reduce((s, serie) => {\n                        const point = serie.points[this.point.index]\n                        return s + `<tr style=\"${serie === this.series ? \"border:1px solid white\" : \"\"}\">\n                            <td style=\"color:${point.series.color}\">\n                                ${point.series.name}\n                            </td>\n                            <td style=\"text-align:right;color:white\"><b>${point.y}</b></td>\n                        </tr>`\n                    }, \"\")\n\n                    html += `<tr>\n                        <td style=\"${footerStyle}\">Total France</td>\n                        <td style=\"${footerStyle};text-align:right\">${getNationalData(this.x)}</td>\n                    </tr>\n                    </table>`\n\n                    return html\n                }\n            },\n            series: this.setSeries()\n        }\n    }\n\n    render() {\n        return (\n            <HighchartsReact\n                highcharts={ Highcharts }\n                options={ this.setConfig() }\n                { ...this.props }\n            />\n        )\n    }\n})","import React from \"react\"\n\nexport default () => (\n    <a href=\"https://twitter.com/YBotochay\" className=\"twitter\">\n        Suivez-moi sur&nbsp;\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n            <path\n                fill=\"white\"\n                d=\"M23.643 4.937c-.835.37-1.732.62-2.675.733.962-.576 1.7-1.49 2.048-2.578-.9.534-1.897.922-2.958 1.13-.85-.904-2.06-1.47-3.4-1.47-2.572 0-4.658 2.086-4.658 4.66 0 .364.042.718.12 1.06-3.873-.195-7.304-2.05-9.602-4.868-.4.69-.63 1.49-.63 2.342 0 1.616.823 3.043 2.072 3.878-.764-.025-1.482-.234-2.11-.583v.06c0 2.257 1.605 4.14 3.737 4.568-.392.106-.803.162-1.227.162-.3 0-.593-.028-.877-.082.593 1.85 2.313 3.198 4.352 3.234-1.595 1.25-3.604 1.995-5.786 1.995-.376 0-.747-.022-1.112-.065 2.062 1.323 4.51 2.093 7.14 2.093 8.57 0 13.255-7.098 13.255-13.254 0-.2-.005-.402-.014-.602.91-.658 1.7-1.477 2.323-2.41z\"\n            />\n        </svg>\n    </a>\n)","export default [\r\n    {\r\n      \"label\": \"Auvergne-Rhône-Alpes\",\r\n      \"value\": \"REG-84\"\r\n    },\r\n    {\r\n      \"label\": \"Bourgogne-Franche-Comté\",\r\n      \"value\": \"REG-27\"\r\n    },\r\n    {\r\n      \"label\": \"Bretagne\",\r\n      \"value\": \"REG-53\"\r\n    },\r\n    {\r\n      \"label\": \"Centre-Val de Loire\",\r\n      \"value\": \"REG-24\"\r\n    },\r\n    {\r\n      \"label\": \"Corse\",\r\n      \"value\": \"REG-94\"\r\n    },\r\n    {\r\n      \"label\": \"Grand Est\",\r\n      \"value\": \"REG-44\"\r\n    },\r\n    {\r\n      \"label\": \"Guadeloupe\",\r\n      \"value\": \"REG-01\"\r\n    },\r\n    {\r\n      \"label\": \"Guyane\",\r\n      \"value\": \"REG-03\"\r\n    },\r\n    {\r\n      \"label\": \"Hauts-de-France\",\r\n      \"value\": \"REG-32\"\r\n    },\r\n    {\r\n      \"label\": \"Île-de-France\",\r\n      \"value\": \"REG-11\"\r\n    },\r\n    {\r\n      \"label\": \"La Réunion\",\r\n      \"value\": \"REG-04\"\r\n    },\r\n    {\r\n      \"label\": \"Martinique\",\r\n      \"value\": \"REG-02\"\r\n    },\r\n    {\r\n      \"label\": \"Mayotte\",\r\n      \"value\": \"REG-06\"\r\n    },\r\n    {\r\n      \"label\": \"Normandie\",\r\n      \"value\": \"REG-28\"\r\n    },\r\n    {\r\n      \"label\": \"Nouvelle-Aquitaine\",\r\n      \"value\": \"REG-75\"\r\n    },\r\n    {\r\n      \"label\": \"Occitanie\",\r\n      \"value\": \"REG-76\"\r\n    },\r\n    {\r\n      \"label\": \"Pays de la Loire\",\r\n      \"value\": \"REG-52\"\r\n    },\r\n    {\r\n      \"label\": \"Provence-Alpes-Côte d'Azur\",\r\n      \"value\": \"REG-93\"\r\n    }\r\n  ]","import React from 'react';\nimport Container from \"react-bootstrap/Container\"\nimport Col from \"react-bootstrap/Col\"\nimport Row from \"react-bootstrap/Row\"\nimport Alert from \"react-bootstrap/Alert\"\nimport Spinner from 'reactjs-simple-spinner'\nimport DataContext from \"./DataContext\"\nimport Chart from \"./Chart\"\nimport Twitter from \"./Twitter\"\nimport moment from \"moment\"\nimport zones from \"./regions\"\n\nconst storagePrefix = \"vaccination-\"\nclass App extends React.Component {\n\n  state = {\n    data : [],\n    nationalData : [],\n    zones : this.getLocalData(\"zones\") || zones,\n    dateRange : this.getLocalData(\"dateRange\") || { startDate : moment(\"2021-01-11\"), endDate : moment() },\n    scale : this.getLocalData(\"scale\") || \"linear\",\n    chartHeight : null,\n    isFetching : false,\n    fetchError : null\n  }\n\n  divChart = React.createRef()\n\n  getLocalData(key) {\n    try {\n      const data = localStorage.getItem(storagePrefix + key)\n      return data && JSON.parse(data)\n    } catch (e) {\n      console.warn(\"Problème d'accès au localStorage\")\n    }\n  }\n\n  setLocalData(key, value) {\n    try {\n      localStorage.setItem(storagePrefix + key, JSON.stringify(value))\n    } catch (e) {\n      console.warn(\"Problème d'accès au localStorage\")\n    }\n  }\n\n  async fetchRegionalData() {\n    const res = await fetch(\"https://www.data.gouv.fr/fr/datasets/r/16cb2df5-e9c7-46ec-9dbf-c902f834dab1\")\n    return await res.json()\n  }\n\n  async fetchNationalData() {\n    const res = await fetch(\"https://www.data.gouv.fr/fr/datasets/r/b39196f2-97c4-42f4-8dee-5eb07e823377\")\n    return await res.json()\n  }\n\n  async componentDidMount() {\n    const chartHeight = this.divChart?.current?.getBoundingClientRect().height\n    this.setState({ chartHeight, isFetching : true })\n\n    try {\n      const [data, nationalData] = await Promise.all([this.fetchRegionalData(), this.fetchNationalData()])\n      this.setState({ data, nationalData, isFetching : false })\n    } catch (e) {\n      this.setState({\n        fetchError : \"Problème de chargement des données\",\n        isFetching : false\n      })\n    }\n  }\n\n  setKeyValue = (key, value) => {\n    this.setState({ [key] : value })\n    this.setLocalData(key, value)\n  }\n\n  render() {\n\n    const { isFetching, fetchError } = this.state\n\n    return (\n      <DataContext.Provider\n        value={ { ...this.state, setKeyValue : this.setKeyValue } }\n      >\n        <Container\n          fluid\n          className=\"main-container\"\n        >\n          <Row>\n            <Col>\n              <h3>\n                Nombre cumulé de personnes vaccinées contre la COVID-19 en France\n              </h3>\n            </Col>\n          </Row>\n          {/* <Row>\n            <Col>\n              <Form/>\n            </Col>\n          </Row> */}\n          {/* <h6>Cliquez et faites glissez pour zoomer sur une période restreinte</h6> */}\n          <div className=\"chart\" ref={ this.divChart }>\n            { fetchError && <Alert variant=\"danger\">{ fetchError }</Alert> }\n            { isFetching ? <Spinner size=\"large\"/> : null }\n            { !fetchError && !isFetching ? <Chart/> : null }\n          </div>\n          <div className=\"footer\">\n            <Twitter/>\n            <small className=\"source\">\n              Source&nbsp;:&nbsp;\n                <a href=\"https://www.data.gouv.fr/fr/datasets/donnees-relatives-aux-personnes-vaccinees-contre-la-covid-19/\">\n                https://www.data.gouv.fr/fr/datasets/donnees-relatives-aux-personnes-vaccinees-contre-la-covid-19/\n                </a>              \n            </small>\n          </div>\n        </Container>\n      </DataContext.Provider>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then(registration => {\n          registration.unregister();\n        })\n        .catch(error => {\n          console.error(error.message);\n        });\n    }\n  }\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-dates/lib/css/_datepicker.css';\nimport 'react-dates/initialize';\nimport \"highcharts/css/themes/dark-unica.css\"\nimport './styles.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nserviceWorker.register()"],"sourceRoot":""}