{"version":3,"sources":["DataContext.js","Chart.js","Zones.js","Form.js","Twitter.js","App.js","serviceWorker.js","index.js"],"names":["DataContext","React","createContext","withDataContext","Component","props","Consumer","context","Highcharts","setOptions","lang","months","shortMonths","weekdays","resetZoom","this","zones","data","dateRange","series","forEach","zone","dataZone","filter","item","code","value","moment","date","startDate","endDate","push","name","label","map","Number","Date","totalVaccines","title","text","chart","width","height","chartHeight","zoomType","resetZoomButton","theme","style","color","yAxis","type","scale","xAxis","plotOptions","marker","enabled","credits","legend","itemStyle","itemHoverStyle","tooltip","dateTimeLabelFormats","day","setSeries","highcharts","options","setConfig","handleChange","setKeyValue","entry","i","arr","findIndex","el","nom","sort","split","Group","controlId","Label","getOptions","onChange","isMulti","isClearable","Form","Row","Col","md","href","className","viewBox","fill","d","App","state","getLocalData","isFetching","fetchError","divChart","createRef","key","setState","setLocalData","localStorage","getItem","JSON","parse","e","console","warn","setItem","stringify","fetch","res","json","current","getBoundingClientRect","fetchData","log","Provider","Container","fluid","ref","Alert","variant","size","Twitter","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.489cba80.chunk.js","sourcesContent":["import React from \"react\"\n\nconst DataContext = React.createContext()\n\nexport default DataContext\n\nexport const withDataContext = Component => props => (\n    <DataContext.Consumer>\n        { context => <Component { ...context }/> }\n    </DataContext.Consumer>\n)","/* eslint-disable no-unused-expressions */\nimport React from \"react\"\nimport Highcharts from 'highcharts'\nimport HighchartsReact from 'highcharts-react-official'\nimport { withDataContext } from \"./DataContext\"\nimport moment from \"moment\"\n\nHighcharts.setOptions({\n    lang: {\n        months: [\n            'Janvier', 'Février', 'Mars', 'Avril',\n            'Mai', 'Juin', 'Juillet', 'Août',\n            'Septembre', 'Octobre', 'Novembre', 'Décembre'\n        ],\n        shortMonths : [\"Jan\", \"Fév\", \"Mar\", \"Avr\", \"Mai\", \"Juin\", \"Juil\", \"Août\", \"Sep\", \"Oct\", \"Nov\", \"Déc\"],\n        weekdays: [\n            'Dimanche', 'Lundi', 'Mardi', 'Mercredi',\n            'Jeudi', 'Vendredi', 'Samedi'\n        ],\n        resetZoom : \"Réinitialiser le zoom\"\n    }\n})\n\nexport default withDataContext(class Chart extends React.Component {\n\n    setSeries() {\n        const { zones, data, dateRange } = this.props\n\n        const series = []\n        \n        zones?.forEach(zone => {\n            const dataZone = data\n            .filter(item => item.code === zone?.value)\n            .filter(item => moment(item.date) >= dateRange?.startDate)\n            .filter(item => moment(item.date) <= dateRange?.endDate)\n            \n            series.push({\n                name :  zone?.label,\n                data : dataZone.map(item => [Number(new Date(item.date)), Number(item.totalVaccines)] )\n            })\n        })\n\n        return series\n    }\n\n    setConfig() {\n\n        return {\n            title: { text: \"\" },\n            chart: {\n                width : null,\n                height : this.props.chartHeight,\n                zoomType : \"x\",\n                resetZoomButton : {\n                    theme : {\n                        style : { color : \"#ddd\" }\n                    }\n                }\n            },\n            yAxis: {\n                title: { text: \"Nombre de personnes vaccinées\" },\n                type: this.props.scale\n            },\n            xAxis: {\n                type: 'datetime'\n            },\n            plotOptions: {\n                series: {\n                    marker: {\n                        enabled: true\n                    }\n                }\n            },\n            credits: {\n                enabled: false\n            },\n            legend: {\n                itemStyle: {\n                    color: '#bbb'\n                },\n                itemHoverStyle:{\n                    color: '#fff'\n                }\n            },\n            tooltip : {\n                dateTimeLabelFormats : {\n                    day : \"%A %e %b %Y\"\n                }\n            },\n            series: this.setSeries()\n        }\n    }\n\n    render() {\n        return (\n            <HighchartsReact\n                highcharts={ Highcharts }\n                options={ this.setConfig() }\n                { ...this.props }\n            />\n        )\n    }\n})","import React from \"react\"\nimport Form from \"react-bootstrap/Form\"\nimport { withDataContext } from \"./DataContext\"\nimport Select from \"react-select\"\n\nexport default withDataContext(class Zones extends React.Component {\n\n    handleChange = zones => this.props.setKeyValue(\"zones\", zones)\n\n    getOptions() {\n        const { data } = this.props\n        const sep = \" - \"\n        const arrayUnique = data\n            .filter((entry, i, arr) => arr.findIndex(el => el.nom === entry.nom) === i)\n            .map(entry => entry.nom + sep + entry.code)\n        \n        return arrayUnique.sort().map(zone => {\n            const [label, value] = zone.split(sep)\n            return { label, value }\n        })\n    }\n\n    render() {\n\n        return (\n            <Form.Group controlId=\"zone\">\n                <Form.Label>Zones</Form.Label>\n                <Select\n                    options={ this.getOptions() }\n                    value={ this.props.zones }\n                    onChange={ this.handleChange }\n                    isMulti\n                    isClearable={ false }\n                />\n            </Form.Group>\n        )\n    }\n})","import React from \"react\"\nimport BsForm from \"react-bootstrap/Form\"\nimport Col from \"react-bootstrap/Col\"\nimport Row from \"react-bootstrap/Row\"\nimport Zones from \"./Zones\"\n\nexport default class Form extends React.Component {\n\n    render() {\n\n        return (\n            <BsForm>\n                <Row>\n                    <Col md={ 4 }><Zones/></Col>\n                </Row>\n            </BsForm>\n        )\n    }\n}","import React from \"react\"\n\nexport default () => (\n    <a href=\"https://twitter.com/YBotochay\" className=\"twitter\">\n        Suivez-moi sur&nbsp;\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n            <path\n                fill=\"white\"\n                d=\"M23.643 4.937c-.835.37-1.732.62-2.675.733.962-.576 1.7-1.49 2.048-2.578-.9.534-1.897.922-2.958 1.13-.85-.904-2.06-1.47-3.4-1.47-2.572 0-4.658 2.086-4.658 4.66 0 .364.042.718.12 1.06-3.873-.195-7.304-2.05-9.602-4.868-.4.69-.63 1.49-.63 2.342 0 1.616.823 3.043 2.072 3.878-.764-.025-1.482-.234-2.11-.583v.06c0 2.257 1.605 4.14 3.737 4.568-.392.106-.803.162-1.227.162-.3 0-.593-.028-.877-.082.593 1.85 2.313 3.198 4.352 3.234-1.595 1.25-3.604 1.995-5.786 1.995-.376 0-.747-.022-1.112-.065 2.062 1.323 4.51 2.093 7.14 2.093 8.57 0 13.255-7.098 13.255-13.254 0-.2-.005-.402-.014-.602.91-.658 1.7-1.477 2.323-2.41z\"\n            />\n        </svg>\n    </a>\n)","import React from 'react';\nimport Container from \"react-bootstrap/Container\"\nimport Col from \"react-bootstrap/Col\"\nimport Row from \"react-bootstrap/Row\"\nimport Alert from \"react-bootstrap/Alert\"\nimport Spinner from 'reactjs-simple-spinner'\nimport DataContext from \"./DataContext\"\nimport Chart from \"./Chart\"\nimport Form from \"./Form\"\nimport Twitter from \"./Twitter\"\nimport moment from \"moment\"\n\nclass App extends React.Component {\n\n  state = {\n    data : [],\n    zones : this.getLocalData(\"zones\") || [{ value : \"FRA\", label : \"France\" }],\n    dateRange : this.getLocalData(\"dateRange\") || { startDate : moment(\"2021-01-11\"), endDate : moment() },\n    scale : this.getLocalData(\"scale\") || \"linear\",\n    chartHeight : null,\n    isFetching : false,\n    fetchError : null\n  }\n\n  divChart = React.createRef()\n\n  getLocalData(key) {\n    try {\n      const data = localStorage.getItem(key)\n      return data && JSON.parse(data)\n    } catch (e) {\n      console.warn(\"Problème d'accès au localStorage\")\n    }\n  }\n\n  setLocalData(key, value) {\n    try {\n      localStorage.setItem(key, JSON.stringify(value))\n    } catch (e) {\n      console.warn(\"Problème d'accès au localStorage\")\n    }\n  }\n\n  async fetchData() {\n    const res = await fetch(\"https://www.data.gouv.fr/fr/datasets/r/16cb2df5-e9c7-46ec-9dbf-c902f834dab1\")\n    return await res.json()\n  }\n\n  async componentDidMount() {\n    const chartHeight = this.divChart?.current?.getBoundingClientRect().height\n    this.setState({ chartHeight, isFetching : true })\n\n    try {\n      const data = await this.fetchData()\n      this.setState({ data, isFetching : false })\n      console.log({ data })\n    } catch (e) {\n      this.setState({\n        fetchError : \"Problème de chargement des données\",\n        isFetching : false\n      })\n    }\n  }\n\n  setKeyValue = (key, value) => {\n    this.setState({ [key] : value })\n    this.setLocalData(key, value)\n  }\n\n  render() {\n\n    const { isFetching, fetchError } = this.state\n\n    return (\n      <DataContext.Provider\n        value={ { ...this.state, setKeyValue : this.setKeyValue } }\n      >\n        <Container\n          fluid\n          className=\"main-container\"\n        >\n          <Row>\n            <Col>\n              <h3>\n                Nombre cumulé de personnes vaccinées contre la COVID-19 en France\n              </h3>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Form/>\n            </Col>\n          </Row>\n          <h6>Cliquez et faites glissez pour zoomer sur une période restreinte</h6>\n          <div className=\"chart\" ref={ this.divChart }>\n            { fetchError && <Alert variant=\"danger\">{ fetchError }</Alert> }\n            { isFetching ? <Spinner size=\"large\"/> : null }\n            { !fetchError && !isFetching ? <Chart/> : null }\n          </div>\n          <div className=\"footer\">\n            <Twitter/>\n            <small className=\"source\">\n              Source&nbsp;:&nbsp;\n                <a href=\"https://www.data.gouv.fr/fr/datasets/donnees-relatives-aux-personnes-vaccinees-contre-la-covid-19/\">\n                https://www.data.gouv.fr/fr/datasets/donnees-relatives-aux-personnes-vaccinees-contre-la-covid-19/\n                </a>              \n            </small>\n          </div>\n        </Container>\n      </DataContext.Provider>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then(registration => {\n          registration.unregister();\n        })\n        .catch(error => {\n          console.error(error.message);\n        });\n    }\n  }\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-dates/lib/css/_datepicker.css';\nimport 'react-dates/initialize';\nimport \"highcharts/css/themes/dark-unica.css\"\nimport './styles.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nserviceWorker.register()"],"sourceRoot":""}